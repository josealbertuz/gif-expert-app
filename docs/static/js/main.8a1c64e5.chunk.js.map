{"version":3,"sources":["components/SearchGif.js","components/GifGridItem.js","helpers/fetchGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["SearchGif","setAnimes","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","animes","type","value","onChange","target","GifGridItem","title","url","className","src","alt","fetchGifs","query","a","encodeURI","fetch","response","json","data","map","gifObject","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","gifs","useFetchGifs","gif","GifExpertApp","queryies","setQueries","ReactDOM","render","document","getElementById"],"mappings":"2MAuCeA,EAlCG,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAAe,EAEKC,mBAAS,IAFd,mBAExBC,EAFwB,KAEZC,EAFY,KAkB/B,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAU,SAACS,GAAD,OAAaP,GAAb,mBAA4BO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,QCChBG,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNHK,EAAS,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEfN,EAFe,0FAE0EO,UAAUF,GAFpF,sBAIEG,MAAMR,GAJR,cAIfS,EAJe,gBAMAA,EAASC,OANT,uBAMdC,EANc,EAMdA,KANc,kBAQdA,EAAKC,KAAI,SAACC,GACb,MAAO,CACHC,GAAKD,EAAUC,GACff,MAAQc,EAAUd,MAClBC,IAAMa,EAAUE,OAAOC,iBAAiBhB,SAZ3B,2CAAH,sDC0BPiB,EArBC,SAAC,GAAa,IAAZZ,EAAW,EAAXA,MAAW,ECDD,SAACA,GAAW,IAAD,EAETpB,mBAAS,CAC/B0B,KAAO,GACPO,SAAU,IAJqB,mBAE5BC,EAF4B,KAErBC,EAFqB,KAiBnC,OAVAC,qBAAU,WAENjB,EAAUC,GACLiB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBT,KAAOY,EACPL,SAAU,SAEf,CAACb,IAGDc,EDdsBK,CAAanB,GAA9BkB,EAFa,EAElBZ,KAAWO,EAFO,EAEPA,QAElB,OACI,qCACI,6BAAKb,IACJa,GAAW,mBAAGjB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQsB,EAAKX,KAAI,SAACa,GAAD,OAAS,cAAC,EAAD,eAEVA,GADCA,EAAIX,aEOlBY,EAnBM,WAAO,IAAD,EAEQzC,mBAAS,CAAC,uBAFlB,mBAEhB0C,EAFgB,KAENC,EAFM,KAIvB,OACI,qCACI,gDACA,cAAC,EAAD,CAAW5C,UAAW4C,IACtB,uBACA,6BAEQD,EAASf,KAAI,SAACP,GAAD,OAAW,cAAC,EAAD,CAASA,MAAOA,GAAYA,YCTxEwB,IAASC,OACL,cAAC,EAAD,IACEC,SAASC,eAAe,W","file":"static/js/main.8a1c64e5.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from \"prop-types\";\n\n\n\nconst SearchGif = ({setAnimes}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInput = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 0){\n            setAnimes((animes) => [inputValue, ...animes]);\n            setInputValue('');\n        }\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInput}\n            />\n        </form>\n    );\n\n};\n\nSearchGif.propTypes = {\n    setAnimes : PropTypes.func.isRequired\n}\n\nexport default SearchGif;\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    );\n};\n\nexport default GifGridItem;\n","export const fetchGifs = async (query) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=u2RRvBs8iKqwudzK7Xwv6VXzosjDiAxf&q=${encodeURI(query)}&limit=10`;\n\n    const response = await fetch(url);\n\n    const {data} = await response.json();\n\n    return data.map((gifObject) => {\n        return {\n            id : gifObject.id,\n            title : gifObject.title,\n            url : gifObject.images.downsized_medium.url\n        }\n    });\n\n}\n","import React from 'react';\nimport GifGridItem from \"./GifGridItem\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\n\n\nconst GifGrid = ({query}) => {\n\n    const {data:gifs, loading} = useFetchGifs(query);\n\n    return (\n        <>\n            <h2>{query}</h2>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-grid\">\n                {\n                    gifs.map((gif) => <GifGridItem\n                        key={gif.id}\n                        {...gif}/>)\n                }\n\n            </div>\n        </>\n\n    );\n}\n\nexport default GifGrid;\n","import {useEffect, useState} from \"react\";\nimport {fetchGifs} from \"../helpers/fetchGifs\";\n\n\nexport const useFetchGifs = (query) => {\n\n    const [state, setState] = useState({\n        data : [],\n        loading : true\n    });\n\n    useEffect(() => {\n\n        fetchGifs(query)\n            .then(gifs => setState({\n                data : gifs,\n                loading : false\n            }));\n        }, [query])\n\n\n    return state;\n}\n","import React, {useState} from 'react';\nimport SearchGif from \"./components/SearchGif\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n\n    const [queryies, setQueries] = useState(['Shingeki no Kyojin']);\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <SearchGif setAnimes={setQueries}/>\n            <hr/>\n            <ol>\n                {\n                    queryies.map((query) => <GifGrid query={query} key={query}/>)\n                }\n            </ol>\n        </>\n    );\n}\n\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\n\nReactDOM.render(\n    <GifExpertApp />\n    , document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}